.\" Text automatically generated by txt2man
.TH untitled  "14 diciembre 2014" "" ""
.SH NAME
\fBsd \fP- sed debugger with conditional spypoints
\fB
.SH SYNOPSIS
.nf
.fam C
\fBsd\fP [\fIglobal-opts\fP] [[\fB-s\fP \fIspypoint-set\fP] [local-opts]]\.\.\. \fIsedsrc\fP [\fIoptions\fP]
\fBsd\fP -?

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Sed script debugging is a difficult nuisance if only for the lack in
older versions of a simple commenting operator. The only attempt at
providing any facility for debugging is the "=" command, which prints
only the source line number necessarily to stdout. To help make up
for these deficiencies, this program dynamically generates and
executes a custom sed script which will instrument any sed \fBscript\fP(s)
in the shprog argument (use "-" for stdin) you wish debugged so that
sed labels of a conforming format will be substituted into sed code
that will itself print the current pattern (or hold) buffer.
.PP
A label of this nature in the sed code is called a "spypoint-label."
Spypoint-labels must appear alone on their own line. The first
character of these spypoint-labels must start with the capitalized
letter [A-Z]. A "\fIspypoint-set\fP" is all spypoint-labels starting with
the same first character. The notion of spypoint-sets is to define
related groups of spypoint-labels in the sed script.
.PP
To "enable" a \fIspypoint-set\fP is to instruct \fBsd\fP(1S) to potentially
debug at spypoint-labels of this particular \fIspypoint-set\fP; otherwise,
they are left all unchanged to remain as ordinary sed labels. The
notion of enabling is to conveniently turn on or turn off spypoint-
labels of a particular \fIspypoint-set\fP without needing to comment or
delete them. By default, the "X" \fIspypoint-set\fP is always enabled.
.PP
To finally "activate" a particular spypoint-label in a sed script is
to have \fBsd\fP(1S) substitute sed code to debug at that location. Use
"touch \.\.\." or "> \.\.\." to create an empty file by the same name as
the spypoint-label (in the current working directory). To disable a
spypoint-label, merely delete the corresponding file or do not
activate that \fIspypoint-set\fP through an "\fB-s\fP" option. One need not edit
out inactive spypoint labels not used; most sed implementations will
ignore extraneous labels if they are unique. By default, the spypoint-
label "Xspy" is always activated -- creating file "Xspy" is redundant.
.PP
Options defined before the first "\fB-s\fP" option will apply globally to
all subsequent spypoint-sets being defined. Options following a "\fB-s\fP"
up to the next "\fB-s\fP" option or end-of-\fIoptions\fP apply locally only to
that \fIspypoint-set\fP. Invoke this program with any \fBnon-\fBsd\fP\fP(1S) command
line parameters following one "--" option.
.PP
All sed labels, whether a spypoint-label or not, must be uniquely
named, so as a convenience a filename will activate all similar
labels otherwise ending with ".[0-9]". Otherwise, the spypoint-
label must be comprised of alphanumerics or an underscore.
.PP
As a convenience, \fIoptions\fP may be set from variable SDRC, or if that
is null or unset: file ./.sdrc, or if that does not exist: file
$HOME/.sdrc. Command line arguments will override these settings.
.PP
The sed code to echo the trace does not use and possibly overwrite
the hold buffer, nor will it interfere with the "t" command; however,
any null substitution R.E. (i.e. s//\.\.\./) will be redefined by the
intervening trace code.
.PP
The easiest way to debug a standalone executable sed script is to
command: \fBsd\fP \fB-e\fP "sed \fB-f\fP" file.sed.
.PP
All comments appearing alone on their own line with be deleted. In
addition, one may comment out several consecutive lines by delimiting
those lines with the special comments #CBEGIN and #CEND.
.PP
While debugging, it is preferable to extract any sed script temporarily
to a separate file, and execute "sed \fB-f\fP sd.code" from the shprog.
.SH OPTIONS
.TP
.B
-?
- Print this usage information.
.TP
.B
\fB-c\fP <opt>
- Set pattern or numerical range to conditionally trace
output. May be specified multiple times.
\fB-C\fP|+c <pat> - Set pattern or numerical range to conditionally exclude
trace output. May be specified multiple times.
.TP
.B
\fB-d\fP <dir>
- Get all \fB-s\fP option spypoints from directory <dir>. ["."]
.TP
.B
\fB-e\fP <shell>
- Shell to execute traced script in. [$SHELL]
.TP
.B
\fB-h\fP
- Trace the hold buffer. [pattern buffer]
.TP
.B
\fB-l\fP
- Preceed trace by input file line number being processed.
.TP
.B
\fB-o\fP <file>
- File to output trace to. May be specified multiple times.
["sd.out"]
.TP
.B
\fB-p\fP
- Print non-printable characters as octal codes.
.TP
.B
\fB-q\fP
- Emit spypoint code suitable within double-quoted script.
[single]
.TP
.B
\fB-r\fP
- Remove extraneous spypoint-labels.
.TP
.B
\fB-s\fP <char>
- Select \fIspypoint-set\fP to activate in the sed script by the
filename expansion form [A-Z]* of corresponding
filenames. ["X"]
.TP
.B
\fB-v\fP
- Show characters newline and tab as "^M" and "^I".
.TP
.B
\fB-x\fP
- Copy the internal sed script and transformed \fB-f\fP option
script to "sd.munge" and "sd.code" respectively.
For the curious only ;)
.TP
.B
--
- Use to separate "\fBsd\fP" args from args to be passed to
traced script.
.PP
Note: Defaults are in brackets. Default config is: \fB-d.\fP \fB-osd.out\fP \fB-sX\fP
.SH EXAMPLE
Assuming the default spypoint-label ":Xspy" exists in script
"shprog.sh" taking parameters "params"\.\.\.
.PP
$ \fBsd\fP shprog.sh params
.PP
Explanation: This is the simplest case for debugging: with no \fIoptions\fP
given, trace the pattern buffer at the location of any of the spypoint-
labels ": Xspy" or ": Xspy.[0-9]".
.PP
Assuming "script.sed" is an executable sed script, and empty files
"Xpatt" and "Yhold" have been created in the current directory\.\.\.
.PP
$ touch Xpatt Yhold
$ \fBsd\fP \fB-e\fP 'sed \fB-f\fP' \fB-sX\fP \fB-c4\fP,10 \fB-sY\fP \fB-hc4\fP,10 script.sed
.PP
Explanation: between lines 4 to 10 of the input to "script.sed", trace
the pattern buffer at spypoint-label ":Xpatt" (and ":Xpatt.[0-9]"),
and the hold buffer at spypoint-label ":Yhold" (and ":Yhold.[0-9]").
.PP
Assuming the spypoint-labels ":Xspy", ":Yspy.0", and ":Yspy.1" exist
in the sed code to be traced, embedded in the file "shprog.sh"\.\.\.
.PP
$ touch Xspy Yspy
$ \fBsd\fP \fB-v\fP \fB-c9\fP,$ \fB-ot.all\fP \fB-sX\fP \fB-C\fP'/^#/' \fB-ot.X\fP \fB-sY\fP \fB-h\fP \fB-ot.Y\fP shprog.sh \fB-opts\fP
.PP
Explanation: tracing the script "sedtest.sh \fB-opts\fP", at spypoint-
label "Xspy" echo to file "t.X" the pattern buffer, except when in
the form of "#" comments. At spypoint-labels "Yspy.[01]" echo the
hold buffer to file "t.Y". The above is done only starting from line
9 of the input file, and all output (which will have tabs and newlines
converted to visible characters) is additionally captured to file
"t.all" and the terminal. The default spypoint-labels "Xspy" and
"Yspy" are also enabled.
.PP
Any of the "\fBsd\fP" \fIoptions\fP above may be placed in file ".sdrc" to
automatically use these as if they had been typed at the terminal.
.SH ENVIRONMENT
SDRC - optional command line \fIoptions\fP
.SH FILES
\fBsd\fP$$.1 (sd.munge) - script to munge embedded sed script in shprog
\fBsd\fP$$.2 (sd.code) - file copy of munged shprog file
sd.out - default output capture file of "\fBsd\fP" output
.sdrc - initialization script of "\fBsd\fP" \fIoptions\fP
/dev/tty
/dev/fd/2
/dev/stderr
.SH DIAGNOSTICS

.SH SEE ALSO
\fBad\fP(1S), \fBside\fP(1S)
.SH AUTHOR
Brian Hiles <bsh@iname.com>
.SH BUGS
Since sed opens and closes all "w" command arguments per process,
similarly named spypoints in different sed processes will mutually
overwrite "o" option files, including and especially the default
trace file, "sd.out".
.PP
Keep in mind that the k/sh builtin ":" may have the same syntax
as a sed label, since the transformation of the object script
is a simple pattern substitution.
.PP
Because "\fBsd\fP" adds sed code and strips comments, any diagnostics that
report the line number will be inaccurate to the original source. XXX
.PP
The dynamically created sed script \fBsd\fP$$.1 (sd.munge) can potentially
be too large for some sed versions to run, if too many spypoint-sets
are defined by "\fB-s\fP" \fIoptions\fP.
.PP
If the \fB-r\fP option to remove unused spypoint-labels is used, it is
prudent that no labels in the debugged sed script start with a
capital letter that are not intended to be a spypoint-label.
.PP
If multiple sed scripts are embedded in a shell script, the option
to apply single- or double-quote spypoint code applies to all of
these scripts.
